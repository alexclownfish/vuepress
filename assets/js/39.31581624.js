(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{569:function(e,n,t){"use strict";t.r(n);var a=t(8),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"jenkins-gitlab-nexus3-harbor-此类清单已有-安装部署不再叙述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-gitlab-nexus3-harbor-此类清单已有-安装部署不再叙述"}},[e._v("#")]),e._v(" jenkins gitlab nexus3/harbor 此类清单已有，安装部署不再叙述")]),e._v(" "),t("p",[e._v("Github: https://github.com/alexclownfish/jenkins_pipline\n资源清单均在以上github地址")]),e._v(" "),t("ul",[t("li",[e._v("版本发布失败/成功推送钉钉")]),e._v(" "),t("li",[e._v("版本回滚成功/失败推送钉钉")]),e._v(" "),t("li",[e._v("构建stage过程成功/失败推送钉钉")])]),e._v(" "),t("h2",{attrs:{id:"jenkins-所需插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-所需插件"}},[e._v("#")]),e._v(" jenkins 所需插件")]),e._v(" "),t("p",[e._v("网络延迟大下载慢，可以到下边地址下载，再load到jenkins\nhttps://updates.jenkins-ci.org/download/plugins/")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Docker plugin\nKubernetes plugin\nKubernetes CLI Plugin\nDingTalk\nGitLab Plugin\nLocalization: Chinese (Simplified)\n")])])]),t("h2",{attrs:{id:"kubernetes-clouds-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-clouds-配置"}},[e._v("#")]),e._v(" kubernetes clouds 配置")]),e._v(" "),t("h3",{attrs:{id:"添加kubernetes-clouds"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加kubernetes-clouds"}},[e._v("#")]),e._v(" 添加kubernetes clouds")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/b5d7bf8647884362986318f120ce3ab8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/01be65a17f824bff935707c4fd38212b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}}),e._v(" "),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/64d7f189fff840bb88c24626447ca882.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}}),e._v(" "),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/3d0852c42d224d27a06eefb4751aafbf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}}),e._v(" "),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/a478fbb644584217a427d752a679fc46.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h3",{attrs:{id:"pod-templates"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod-templates"}},[e._v("#")]),e._v(" Pod Templates")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/ae9beea44aec465280b87566cced3d7b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h4",{attrs:{id:"jenkins-slave"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-slave"}},[e._v("#")]),e._v(" jenkins-slave")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/12eef9e0420e4fd896e7014197f683cb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h4",{attrs:{id:"maven-3-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-3-6"}},[e._v("#")]),e._v(" maven-3.6")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/6de203aa14cf4403a235e3180d8952f8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}}),e._v(" "),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/c39c211b0fc247dcad37e6a1b979dee5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h4",{attrs:{id:"docker-and-maven-继承maven-3-6-挂载docker-sock以便后续docker-build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-and-maven-继承maven-3-6-挂载docker-sock以便后续docker-build"}},[e._v("#")]),e._v(" docker-and-maven 继承maven-3.6，挂载docker.sock以便后续docker.build")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/2001cd0343e24459bc47d3a998e26c8c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}}),e._v(" "),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/4ce10e598aab430fb53a65b7c6268413.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h4",{attrs:{id:"kubectl-用于kubectl-apply-滚动更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl-用于kubectl-apply-滚动更新"}},[e._v("#")]),e._v(" kubectl (用于kubectl apply 滚动更新)")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/ab1ceed539b74cf9999e1c8b78f542c3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h4",{attrs:{id:"docker-and-maven-and-kubectl-继承docker-and-maven"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-and-maven-and-kubectl-继承docker-and-maven"}},[e._v("#")]),e._v(" docker-and-maven-and-kubectl 继承docker-and-maven")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/a85774d512ad4c2ab274755c236461cd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h2",{attrs:{id:"pipeline-to-dingding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pipeline-to-dingding"}},[e._v("#")]),e._v(" pipeline to dingding")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/3ed14fa774d3469d8d05f6048bce0b04.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h2",{attrs:{id:"凭据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#凭据"}},[e._v("#")]),e._v(" 凭据")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/abbe4d4e457e441382df1a91b41e1e21.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h2",{attrs:{id:"job-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#job-配置"}},[e._v("#")]),e._v(" Job 配置")]),e._v(" "),t("h3",{attrs:{id:"参数化构建-版本回滚"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数化构建-版本回滚"}},[e._v("#")]),e._v(" 参数化构建 （版本回滚）")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/3b6ce4299f674e3fb702507921b8703f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h3",{attrs:{id:"pipeline-as-vscode"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pipeline-as-vscode"}},[e._v("#")]),e._v(" pipeline as vscode")]),e._v(" "),t("h4",{attrs:{id:"将pipeline-以jenkinsfile形式存放到代码仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将pipeline-以jenkinsfile形式存放到代码仓库"}},[e._v("#")]),e._v(" 将pipeline 以Jenkinsfile形式存放到代码仓库")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/276993a1538c47c98f303b9bdfc89f2e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h4",{attrs:{id:"配置pipeline-script-from-scm-pipeline从代码仓库检出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置pipeline-script-from-scm-pipeline从代码仓库检出"}},[e._v("#")]),e._v(" 配置Pipeline script from SCM （pipeline从代码仓库检出）")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://img-blog.csdnimg.cn/2961be0afdba4656a5806f1b9beff2fe.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQWxleENsb3duZmlzaA==,size_20,color_FFFFFF,t_70,g_se,x_16",alt:"在这里插入图片描述"}})]),e._v(" "),t("h2",{attrs:{id:"pipeline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pipeline"}},[e._v("#")]),e._v(" PIPELINE")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("pipeline {\n    environment {\n        appName = \"spring-boot-helloword\"\n        appVersion = \"v1.0.3\"\n        registryCredential = \"nexus3-admin\"\n        registry = \"http://sonatype-nexus.cicd.svc.cluster.local:8082\"\n        STATUS_URL = \"http://xxx:31629/job/spring-boot-helloword/${BUILD_NUMBER}/\"\n        CONSOLE_URL = \"http://xxx:31629/job/spring-boot-helloword/${BUILD_NUMBER}/console\"\n    }\n    agent {\n        kubernetes {\n            inheritFrom 'docker-and-maven-and-kubectl'\n        }\n    }\n    \n    stages {\n        stage (\"PULL CODES FROM CANGKU\") {\n            when {\n                environment name: 'action',value: 'deploy'\n            }\n            steps {\n                git branch: 'master', url: 'http://gitlab.cicd.svc.cluster.local:31080/root/spring-boot-demo.git'\n            }\n            post {\n                failure {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}拉取代码失败',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n            }\n        }\n        stage (\"BUILD JAR\") {\n            when {\n                environment name: 'action',value: 'deploy'\n            }\n            steps {\n                container ('maven') {\n                    sh 'mvn clean test package'\n                }\n            }\n            post {\n                failure {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}代码编译失败',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n            }\n        }\n        stage (\"BUILDING APP IMAGE\") {\n            when {\n                environment name: 'action',value: 'deploy'\n            }\n            steps {\n                container ('docker') {\n                    script {\n                        dockerImage = docker.build appName + \":\" + appVersion + \"-\" + BUILD_NUMBER\n                    }\n                }\n            }\n            post {\n                failure {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}镜像打包失败',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n            }\n        }\n        stage (\"Push App Image\") {\n            when {\n                environment name: 'action',value: 'deploy'\n            }\n            steps {\n                container('docker') {\n                    script {\n                        docker.withRegistry(registry,registryCredential) {\n                            dockerImage.push()\n                        }\n                    }\n                }\n            }\n            post {\n                failure {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}镜像推送失败',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n            }\n        }\n        stage('Pull Source Config File') {\n            steps {\n                git branch: 'master',url:'http://gitlab.cicd.svc.cluster.local:31080/root/spring-boot-deploy.git'\n            }\n            post {\n                failure {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}配置清单拉取失败',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n            }\n        }\n        stage('Apply App Yaml') {\n            when {\n                environment name: 'action',value: 'deploy'\n            }\n            steps {\n                container('kubectl') {\n                    withKubeConfig([credentialsId: 'k8s-cluster-admin-kubeconfig-file']) {\n                        sh '''\n                        sed -ri \"s@image: .*@image: sonatype-nexus.cicd.svc.cluster.local:8082/${appName}:${appVersion}-${BUILD_NUMBER}@g\"  deploy/03-deployment.yaml\n                        kubectl apply -f deploy/ --record\n                        '''\n                    }\n                }\n            }\n            post {\n                success {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}滚动更新成功',\n                            '版本：${BUILD_NUMBER}',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n                failure {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}滚动更新失败',\n                            '版本：${BUILD_NUMBER}',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n            }\n        }\n        stage('Rollback') {\n            when {\n                environment name: 'action',value: 'rollback'\n            }\n            steps {\n                container('kubectl') {\n                    withKubeConfig([credentialsId: 'k8s-cluster-admin-kubeconfig-file']) {\n                        sh '''\n                        sed -ri \"s@image: .*@image: sonatype-nexus.cicd.svc.cluster.local:8082/${appName}:${appVersion}-${BUILD_NUMBER}@g\"  deploy/03-deployment.yaml\n                        kubectl apply -f deploy/ --record\n                        '''\n                    }\n                }\n            }\n            post {\n                success {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}回滚成功',\n                            '回滚版本：${BUILD_NUMBER}',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n                failure {\n                    dingtalk (\n                        robot: '1174f280-4f5a-43e7-aa2f-a062c3808993',\n                        type: 'MARKDOWN',\n                        title: 'spring-boot项目',\n                        text: [\n                            '### spring-boot项目',\n                            '状态：${appName}回滚失败',\n                            '回滚版本：${BUILD_NUMBER}',\n                            '[查看部署详情](${STATUS_URL})',\n                            '[查看日志Console](${CONSOLE_URL})'\n                        ],\n                        at: [\n                            '15737927244'\n                        ]\n                    )\n                }\n            }\n        }\n    }\n}\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);