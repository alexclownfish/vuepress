(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{562:function(a,t,e){"use strict";e.r(t);var n=e(8),s=Object(n.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"k8s-master-tomcat启动jenkins服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k8s-master-tomcat启动jenkins服务"}},[a._v("#")]),a._v(" k8s-master tomcat启动jenkins服务")]),a._v(" "),e("p",[a._v("1.验证java环境")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('[root@k8s-master ~]# java -version\nopenjdk version "1.8.0_292"\nOpenJDK Runtime Environment (build 1.8.0_292-b10)\nOpenJDK 64-Bit Server VM (build 25.292-b10, mixed mode)\n')])])]),e("p",[a._v("2.下载tomcat，jenkins安装包")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("wget https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.69/bin/apache-tomcat-8.5.69.tar.gz\nwget http://mirrors.jenkins.io/war-stable/latest/jenkins.war\n")])])]),e("p",[a._v("3.配置环境变量\nvim /etc/profile 打开配置文件，按 i 进入编辑模式，在profile文件尾部 unset -f pathmunge 后面添加如下内容：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("unset i\nunset -f pathmunge\nexport JAVA_HOME=/usr/local/java/jdk1.8.0_221\nexport JRE_HOME=${JAVA_HOME}/jre\nexport CATALINA_HOME=/usr/local/tomcat8\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib:$CLASSPATH\nexport JAVA_PATH=${JAVA_HOME}/bin:${JRE_HOME}/bin:${CATALINA_HOME}/bin\nexport PATH=$PATH:${JAVA_PATH}:$PATH\n")])])]),e("p",[a._v("4.配置tomcat并启动jenkins")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("mkdir /usr/local/tomcat8\ntar -zxvf apache-tomcat-8.5.37.tar.gz -C /usr/local/tomcat8\nmv jenkins.war /usr/local/tomcat8/webapps\n#启动tomcat\n/usr/local/tomcat8/bin/startup.sh\n#停止tomcat\n/usr/local/tomcat8/bin/shutdown.sh\n")])])]),e("p",[a._v("http://localhost:8080 访问jenkins")]),a._v(" "),e("h3",{attrs:{id:"自动化脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#自动化脚本"}},[a._v("#")]),a._v(" 自动化脚本")]),a._v(" "),e("p",[a._v("在jenkins的后端准备好自动化部署脚本k8s_auto_deploy.sh，事先做好公私钥认证，使得jenkins能够访问k8s-master")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('#!/bin/bash\nURL=http://106.12.189.57/root/java-demo.git\nStarttime=`date +"%Y-%m-%d_%H-%M-%S"`\nMethod=$1\nBranch=$2\nt1=`date +"%Y-%m-%d %H:%M:%S"`\n\n     #代码克隆至jenkins后端\nclone_code(){\n    cd /root/.jenkins/workspace/jenkins_project && git clone -b $Branch ${URL}&& echo "Clone Finished"\n}\n\n #代码打包压缩并远程推送至k8s-master-1的nginx镜像制作目录\nPack_scp(){\n    cd /root/.jenkins/workspace/jenkins_project/java-demo/ && tar cvzf java-demo.tar.gz * && echo Package Finished\n    cp java-demo.tar.gz /data/Dockerfile/java-demo/ && cd /data/Dockerfile/java-demo/ && tar xvf java-demo.tar.gz && rm -f java-demo.tar.gz\n}\n\n #远程操作k8s-master-1节点，进行镜像制作并推送至harbor镜像仓库\nbuild_iamge(){\n    cd /data/Dockerfile/java-demo/ && ./build.sh ${BUILD_NUMBER} && echo \'build_image and push_harbor success!\'\n}\n\n    #对k8s集群中的nginx的pod应用进行升级\napp_update(){\n    sed -ri \'s@image: .*@image: 106.12.37.109/library/tomcat-java-demo:${BUILD_NUMBER}@g\'  /data/mainfest/deployment.yaml\n    kubectl set image deployment/java-demo java-demo=106.12.37.109/library/tomcat-java-demo:${BUILD_NUMBER} -n default --record=true\n                t2=`date +"%Y-%m-%d %H:%M:%S"`\n    start_T=`date --date="${t1}" +%s`\n    end_T=`date --date="${t2}" +%s`\n    total_time=$((end_T-start_T))\n    echo "deploy success,it has been spent ${total_time} seconds"   \n}\n\n    #k8s集群中的pod应用进行回滚\napp_rollback(){\n     kubectl rollout undo deployment/java-demo  -n default\n}\n\n    #进行k8s集群自动部署的主函数\nmain(){\n    case $Method in \n    deploy)\n        clone_code\n        Pack_scp\n        build_iamge\n        app_update\n    ;;\n    rollback)\n        app_rollback\n    ;;\n    esac\n}\n\n#执行主函数命令\nmain $1 $2\n\n')])])]),e("p",[a._v("构建镜像代码")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("#!/bin/bash\n#镜像版本变量\nversion=$1\n#编译项目代码\nmvn clean package -Dmaven.test.skip=true\n#解压项目代码至新文件夹\nunzip target/*.war -d target/ROOT\n#编写Dockerfile\ncat > Dockerfile <<EOF\nFROM lizhenliang/tomcat   \nLABEL maintainer alex\nRUN rm -rf /usr/local/tomcat/webapps/*\nCOPY target/ROOT /usr/local/tomcat/webapps/ROOT \nEOF\n#build镜像并推送\ndocker build -t 106.12.37.109/library/tomcat-java-demo:$version .\ndocker push 106.12.37.109/library/tomcat-java-demo:$version\n\n")])])]),e("h2",{attrs:{id:"参数化构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数化构建"}},[a._v("#")]),a._v(" 参数化构建")]),a._v(" "),e("p",[a._v("web端访问jenkins\n"),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/561f5a71b3aa4a8aa21c8a228c567150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70",alt:"请添加图片描述"}}),a._v("\n创建一个jenkins_project项目，并编辑配置\n"),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/9f4f2c9fc19a4f3fbab8e4c9a20ff14d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70",alt:"请添加图片描述"}}),a._v(" "),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/b194cf37cb1c432899651f832f898f59.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70",alt:"请添加图片描述"}}),a._v("\n将jenkins的公钥配置到gitlab服务的web端，使得jenkins可以直接拉取代码无需认证"),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/4e21fcf761fb48bb904d5a1c8e4508bf.png",alt:"请添加图片描述"}}),a._v(" "),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/689145a726d54c6393aaad1f6ff12ff0.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTUwOTU4Mg==,size_16,color_FFFFFF,t_70",alt:"请添加图片描述"}}),a._v("\n或者使用https方式来取代码 ，我测试中用的是https，生产中最好用ssh\n后续验证就不写了")])])}),[],!1,null,null,null);t.default=s.exports}}]);