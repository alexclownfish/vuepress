(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{563:function(e,n,a){"use strict";a.r(n);var t=a(8),l=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("1、说明：创建数据库\nCreate DATABASE database-name\n2、说明：删除数据库\ndrop database dbname\n3、说明：备份sql server\n— 创建备份数据的 device\nUSE master\nEXEC sp_addumpdevice ‘disk‘, ‘testBack‘, ‘c:\\mssql7backup\\MyNwind_1.dat‘\n— 开始备份\nBACKUP DATABASE pubs TO testBack\n4、说明：创建新表\ncreate table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],…)\n根据已有的表创建新表：\nA：create table tab_new like tab_old (使用旧表创建新表)\nB：create table tab_new as select col1,col2… from tab_old definition only\n5、说明：删除新表\ndrop table tabname\n6、说明：增加一个列\nAlter table tabname add column col type\nalter table student add dd char;\n注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型的长度。\n7、说明：添加主键： Alter table tabname add primary key(col)\nalter table student add primary key(sno);\n说明：删除主键： Alter table tabname drop primary key(col)\nAlter table TF_F_USER_RES drop primary key(USER_ID, PARTITION_ID, RES_TYPE_CODE, RES_CODE, START_DATE);\n8、说明：创建索引：create [unique] index idxname on tabname(col….)\n删除索引：drop index idxname\n注：索引是不可更改的，想更改必须删除重新建。\n9、说明：创建视图：create view viewname as select statement\n删除视图：drop view viewname\n10、说明：几个简单的基本的sql语句\n选择：select * from table1 where 范围\n插入：insert into table1(field1,field2) values(value1,value2)\n删除：delete from table1 where 范围\n更新：update table1 set field1=value1 where 范围\n查找：select * from table1 where field1 like ’%value1%’ —like的语法很精妙，查资料!\n排序：select * from table1 order by field1,field2 [desc]\n总数：select count as totalcount from table1\n求和：select sum(field1) as sumvalue from table1\n平均：select avg(field1) as avgvalue from table1\n最大：select max(field1) as maxvalue from table1\n最小：select min(field1) as minvalue from table1\n11、说明：几个高级查询运算词\nA： UNION 运算符\nUNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。当 ALL 随 UNION 一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。\nB： EXCEPT 运算符\nEXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。\nC： INTERSECT 运算符\nINTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。\n注：使用运算词的几个查询结果行必须是一致的。\n12、说明：使用外连接\nA、left outer join：\n左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。\nSQL: select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c\nB：right outer join:\n右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。\nC：full outer join：\n全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。")]),e._v(" "),a("p",[e._v("二、提升")]),e._v(" "),a("p",[e._v("1、说明：复制表(只复制结构,源表名：a 新表名：b) (Access可用)\n法一：select * into b from a where 1<>1\n法二：select top 0 * into b from a\n2、说明：拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用)\ninsert into b(a, b, c) select d,e,f from b;")]),e._v(" "),a("p",[e._v('3、说明：跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)\ninsert into b(a, b, c) select d,e,f from b in ‘具体数据库’ where 条件\n例子：…from b in ‘"&Server.MapPath("."&"\\data.mdb" &"‘ where…')]),e._v(" "),a("p",[e._v("4、说明：子查询(表名1：a 表名2：b)\nselect a,b,c from a where a IN (select d from b 或者: select a,b,c from a where a IN (1,2,3)")]),e._v(" "),a("p",[e._v("5、说明：显示文章、提交人和最后回复时间\nselect a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b")]),e._v(" "),a("p",[e._v("6、说明：外连接查询(表名1：a 表名2：b)\nselect a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c")]),e._v(" "),a("p",[e._v("7、说明：在线视图查询(表名1：a\nselect * from (Select a,b,c FROM a) T where t.a > 1;")]),e._v(" "),a("p",[e._v("8、说明：between的用法,between限制查询数据范围时包括了边界值,not between不包括\nselect * from table1 where time between time1 and time2\nselect a,b,c, from table1 where a not between 数值1 and 数值2")]),e._v(" "),a("p",[e._v("9、说明：in 的使用方法\nselect * from table1 where a [not] in (‘值1’,’值2’,’值4’,’值6’)")]),e._v(" "),a("p",[e._v("10、说明：两张关联表，删除主表中已经在副表中没有的信息\ndelete from table1 where not exists ( select * from table2 where table1.field1=table2.field1")]),e._v(" "),a("p",[e._v("11、说明：四表联查问题：\nselect * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where …")]),e._v(" "),a("p",[e._v("12、说明：日程安排提前五分钟提醒\nSQL: select * from 日程安排 where datediff(‘minute‘,f开始时间,getdate())>5")]),e._v(" "),a("p",[e._v("13、说明：一条sql 语句搞定数据库分页\nselect top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段")]),e._v(" "),a("p",[e._v("14、说明：前10条记录\nselect top 10 * form table1 where 范围")]),e._v(" "),a("p",[e._v("15、说明：选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)\nselect a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)")]),e._v(" "),a("p",[e._v("16、说明：包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个结果表\n(select a from tableA except (select a from tableB) except (select a from tableC)")]),e._v(" "),a("p",[e._v("17、说明：随机取出10条数据\nselect top 10 * from tablename order by newid()")]),e._v(" "),a("p",[e._v("18、说明：随机选择记录\nselect newid()")]),e._v(" "),a("p",[e._v("19、说明：删除重复记录\nDelete from tablename where id not in (select max(id) from tablename group by col1,col2,…)")]),e._v(" "),a("p",[e._v("20、说明：列出数据库里所有的表名\nselect name from sysobjects where type=‘U‘")]),e._v(" "),a("p",[e._v("21、说明：列出表里的所有的\nselect name from syscolumns where id=object_id(‘TableName‘)")]),e._v(" "),a("p",[e._v("22、说明：列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似select 中的case。\nselect type,sum(case vender when ‘A‘ then pcs else 0 end),sum(case vender when ‘C‘ then pcs else 0 end),sum(case vender when ‘B‘ then pcs else 0 end) FROM tablename group by type\n显示结果：\ntype vender pcs\n电脑 A 1\n电脑 A 1\n光盘 B 2\n光盘 A 2\n手机 B 3\n手机 C 3")]),e._v(" "),a("p",[e._v("23、说明：初始化表table1")]),e._v(" "),a("p",[e._v("TRUNCATE TABLE table1")]),e._v(" "),a("p",[e._v("24、说明：选择从10到15的记录\nselect top 5 * from (select top 15 * from table order by id asc) table_别名 order by id desc")]),e._v(" "),a("p",[e._v("三、技巧")]),e._v(" "),a("p",[e._v("1、1=1，1=2的使用，在SQL语句组合时用的较多")]),e._v(" "),a("p",[e._v("“where 1=1”是表示选择全部“where 1=2”全部不选，\n如：\nif @strWhere !=‘\nbegin\nset @strSQL = ‘select count() as Total from [‘ + @tblName + ‘] where ‘ + @strWhere\nend\nelse\nbegin\nset @strSQL = ‘select count() as Total from [‘ + @tblName + ‘]‘\nend")]),e._v(" "),a("p",[e._v("我们可以直接写成\nset @strSQL = ‘select count(*) as Total from [‘ + @tblName + ‘] where 1=1 安定‘+ @strWhere")]),e._v(" "),a("p",[e._v("2、收缩数据库\n–重建索引\nDBCC REINDEX\nDBCC INDEXDEFRAG\n–收缩数据和日志\nDBCC SHRINKDB\nDBCC SHRINKFILE")]),e._v(" "),a("p",[e._v("3、压缩数据库\ndbcc shrinkdatabase(dbname)")]),e._v(" "),a("p",[e._v("4、转移数据库给新用户以已存在用户权限\nexec sp_change_users_login ‘update_one‘,‘newname‘,‘oldname‘\ngo")]),e._v(" "),a("p",[e._v("5、检查备份集\nRESTORE VERIFYONLY from disk=‘E:\\dvbbs.bak‘")]),e._v(" "),a("p",[e._v("6、修复数据库\nAlter DATABASE [dvbbs] SET SINGLE_USER\nGO\nDBCC CHECKDB(‘dvbbs‘,repair_allow_data_loss) WITH TABLOCK\nGO\nAlter DATABASE [dvbbs] SET MULTI_USER\nGO")]),e._v(" "),a("p",[e._v("7、日志清除\nSET NOCOUNT ON\nDECLARE @LogicalFileName sysname,\n@MaxMinutes INT,\n@NewSize INT")]),e._v(" "),a("p",[e._v("USE tablename – 要操作的数据库名\nSelect @LogicalFileName = ‘tablename_log‘, – 日志文件名\n@MaxMinutes = 10, – Limit on time allowed to wrap log.\n@NewSize = 1 – 你想设定的日志文件的大小(M)")]),e._v(" "),a("p",[e._v("– Setup / initialize\nDECLARE @OriginalSize int\nSelect @OriginalSize = size\nFROM sysfiles\nWhere name = @LogicalFileName\nSelect ‘Original Size of ‘ + db_name() + ‘ LOG is ‘ +\nCONVERT(VARCHAR(30),@OriginalSize) + ‘ 8K pages or ‘ +\nCONVERT(VARCHAR(30),(@OriginalSize*8/1024)) + ‘MB‘\nFROM sysfiles\nWhere name = @LogicalFileName\nCreate TABLE DummyTrans\n(DummyColumn char (8000) not null)")]),e._v(" "),a("p",[e._v("DECLARE @Counter INT,\n@StartTime DATETIME,\n@TruncLog VARCHAR(255)\nSelect @StartTime = GETDATE(),\n@TruncLog = ‘BACKUP LOG ‘ + db_name() + ‘ WITH TRUNCATE_ONLY‘")]),e._v(" "),a("p",[e._v("DBCC SHRINKFILE (@LogicalFileName, @NewSize)\nEXEC (@TruncLog)\n– Wrap the log if necessary.\nWHILE @MaxMinutes > DATEDIFF (mi, @StartTime, GETDATE()) – time has not expired\nAND @OriginalSize = (Select size FROM sysfiles Where name = @LogicalFileName)\nAND (@OriginalSize * 8 /1024) > @NewSize\nBEGIN – Outer loop.\nSelect @Counter = 0\nWHILE ((@Counter < @OriginalSize / 16) AND (@Counter < 50000))\nBEGIN – update\nInsert DummyTrans VALUES (‘Fill Log‘)\nDelete DummyTrans\nSelect @Counter = @Counter + 1\nEND\nEXEC (@TruncLog)\nEND\nSelect ‘Final Size of ‘ + db_name() + ‘ LOG is ‘ +\nCONVERT(VARCHAR(30),size) + ‘ 8K pages or ‘ +\nCONVERT(VARCHAR(30),(size*8/1024)) + ‘MB‘\nFROM sysfiles\nWhere name = @LogicalFileName\nDrop TABLE DummyTrans\nSET NOCOUNT OFF")]),e._v(" "),a("p",[e._v("8、说明：更改某个表\nexec sp_changeobjectowner ‘tablename‘,‘dbo‘")]),e._v(" "),a("p",[e._v("9、存储更改全部表")]),e._v(" "),a("p",[e._v("Create PROCEDURE dbo.User_ChangeObjectOwnerBatch\n@OldOwner as NVARCHAR(128),\n@NewOwner as NVARCHAR(128)\nAS")]),e._v(" "),a("p",[e._v("DECLARE @Name as NVARCHAR(128)\nDECLARE @Owner as NVARCHAR(128)\nDECLARE @OwnerName as NVARCHAR(128)")]),e._v(" "),a("p",[e._v("DECLARE curObject CURSOR FOR\nselect ‘Name‘ = name,\n‘Owner‘ = user_name(uid)\nfrom sysobjects\nwhere user_name(uid)=@OldOwner\norder by name")]),e._v(" "),a("p",[e._v("OPEN curObject\nFETCH NEXT FROM curObject INTO @Name, @Owner\nWHILE(@@FETCH_STATUS=0)\nBEGIN\nif @Owner=@OldOwner\nbegin\nset @OwnerName = @OldOwner + ‘.‘ + rtrim(@Name)\nexec sp_changeobjectowner @OwnerName, @NewOwner\nend\n– select @name,@NewOwner,@OldOwner")]),e._v(" "),a("p",[e._v("FETCH NEXT FROM curObject INTO @Name, @Owner\nEND")]),e._v(" "),a("p",[e._v("close curObject\ndeallocate curObject\nGO")]),e._v(" "),a("p",[e._v("10、SQL SERVER中直接循环写入数据\ndeclare @i int\nset @i=1\nwhile @i<30\nbegin\ninsert into test (userid) values(@i)\nset @i=@i+1\nend")])])}),[],!1,null,null,null);n.default=l.exports}}]);